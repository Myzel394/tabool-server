# Generated by Django 3.1.7 on 2021-03-12 19:00

import apps.django.main.homework.file_uploads
import apps.django.main.homework.validators
from django.db import migrations, models
import django.db.models.deletion
import django_common_utils.libraries.handlers.models
import django_lifecycle.mixins
import private_storage.fields
import private_storage.storage.files


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classbook',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('lesson_date', models.DateField(verbose_name='Datum')),
                ('presence_content', models.TextField(blank=True, null=True, verbose_name='Inhalt Präsenzunterricht')),
                ('online_content', models.TextField(blank=True, null=True, verbose_name='Inhalt Fernunterricht')),
                ('video_conference_link', models.URLField(blank=True, max_length=1023, null=True)),
            ],
            options={
                'verbose_name': 'Klassenbuch',
                'verbose_name_plural': 'Klassenbücher',
                'ordering': ('lesson_date',),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model, django_common_utils.libraries.handlers.models.HandlerMixin),
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, help_text='Date and time when this was created', max_length=127, verbose_name='Creation date')),
                ('lesson_date', models.DateField(verbose_name='Datum')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Fälligkeitsdatum')),
                ('information', models.TextField(blank=True, max_length=1023, null=True, verbose_name='Informationen')),
                ('type', models.CharField(blank=True, help_text='Beispiel: Vortag, Hausaufgabe, Protokoll, Hausarbeit', max_length=127, null=True, verbose_name='Hausaufgaben-Typ')),
            ],
            options={
                'verbose_name': 'Hausaufgabe',
                'verbose_name_plural': 'Hausaufgaben',
                'ordering': ('-due_date', '-lesson_date'),
                'permissions': (('can_view_private_homework', 'Kann private Hausaufgaben sehen und bearbeiten'),),
            },
            bases=(django_common_utils.libraries.handlers.models.HandlerMixin, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, help_text='Date and time when this was created', max_length=127, verbose_name='Creation date')),
                ('lesson_date', models.DateField(verbose_name='Datum')),
                ('name', models.CharField(blank=True, max_length=31, verbose_name='Name')),
                ('publish_datetime', models.DateTimeField(blank=True, help_text='Ab wann Schüler auf die Datei zugreifen können', null=True, validators=[apps.django.main.homework.validators.only_future], verbose_name='Veröffentlichkeitsdatum')),
                ('announce', models.BooleanField(default=True, help_text='Kann aktiviert werden, wenn die Datei zu einem bestimmten Zeitpunkt veröffentlicht wird und die Schüler vorher davon erfahren dürfen.', verbose_name='Ankündigen')),
                ('file', private_storage.fields.PrivateFileField(max_length=1023, storage=private_storage.storage.files.PrivateFileSystemStorage(), upload_to=apps.django.main.homework.file_uploads.build_material_upload_to, verbose_name='Datei')),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materialien',
                'ordering': ('name', 'publish_datetime', 'created_at'),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, help_text='Date and time when this was created', max_length=127, verbose_name='Creation date')),
                ('lesson_date', models.DateField(verbose_name='Datum')),
                ('name', models.CharField(blank=True, max_length=31, verbose_name='Name')),
                ('file', private_storage.fields.PrivateFileField(max_length=1023, storage=private_storage.storage.files.PrivateFileSystemStorage(), upload_to=apps.django.main.homework.file_uploads.build_submission_upload_to, verbose_name='Datei')),
                ('publish_datetime', models.DateTimeField(blank=True, help_text='Ab wann die Datei für den Lehrer sichtbar ist.', null=True, verbose_name='Veröffentlichkeitsdatum')),
            ],
            options={
                'verbose_name': 'Einsendung',
                'verbose_name_plural': 'Einsendungen',
                'ordering': ('name', 'publish_datetime', '-created_at'),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserHomeworkRelation',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('completed', models.BooleanField(default=False, verbose_name='Erledigt')),
                ('ignored', models.BooleanField(default=False, verbose_name='Ignorieren')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homework.homework', verbose_name='Hausaufgabe')),
            ],
            options={
                'verbose_name': 'Hausaufgabe-Benutzer-Beziehung',
                'verbose_name_plural': 'Hausaufgabe-Benutzer-Beziehungen',
                'ordering': ('homework', 'user'),
            },
        ),
    ]
