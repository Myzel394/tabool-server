# Generated by Django 3.1.7 on 2021-03-12 19:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_lifecycle.mixins
import fernet_fields.fields
import simple_email_confirmation.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(blank=True, editable=False, max_length=11, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email-Adresse')),
                ('has_filled_out_data', models.BooleanField(default=False, verbose_name='Daten ausgefüllt')),
                ('load_scooso_data', models.BooleanField(default=True, verbose_name='Scooso-Daten laden')),
            ],
            options={
                'permissions': (('change_user_permissions', 'Kann Benutzer-Berechtigungen verändern'),),
            },
            bases=(simple_email_confirmation.models.SimpleEmailConfirmationUserMixin, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='KnownIp',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('expire_date', models.DateTimeField(verbose_name='Ablaufdatum')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Ip-Adresse')),
            ],
            options={
                'verbose_name': 'Bekannte IP',
                'verbose_name_plural': 'Bekannte Ips',
                'ordering': ('expire_date',),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('data', models.TextField(default='{}', max_length=16383)),
            ],
            options={
                'verbose_name': 'Präferenz',
                'verbose_name_plural': 'Präferenzen',
                'ordering': ('user',),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ScoosoData',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('scooso_id', models.CharField(max_length=127, verbose_name='Scooso-Id')),
                ('username', fernet_fields.fields.EncryptedCharField(help_text='Der Scooso-Benutername wird verschlüsselt gespeichert', max_length=127, verbose_name='Scooso-Benutzername')),
                ('password', fernet_fields.fields.EncryptedCharField(help_text='Das Scooso-Password wird verschlüsselt gespeichert', max_length=127, verbose_name='Scooso-Passwort')),
            ],
            options={
                'verbose_name': 'Scooso-Daten',
                'verbose_name_plural': 'Scooso-Daten',
                'ordering': ('user',),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('class_number', models.PositiveSmallIntegerField(choices=[(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)], verbose_name='Klassenstufe')),
            ],
            options={
                'verbose_name': 'Schüler',
                'verbose_name_plural': 'Schüler',
                'ordering': ('user', 'class_number'),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, help_text='Date and time when this was created', max_length=127, verbose_name='Creation date')),
                ('token', models.CharField(blank=True, editable=False, max_length=63, unique=True, verbose_name='Token')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Token',
                'ordering': ('created_at',),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
