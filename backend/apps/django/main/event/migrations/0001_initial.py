# Generated by Django 3.1.7 on 2021-03-12 19:28

import apps.django.utils.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_common_utils.libraries.handlers.models
import django_lifecycle.mixins
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('school_data', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lesson', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('title', models.CharField(max_length=127, verbose_name='Titel')),
                ('start_datetime', models.DateTimeField(validators=[apps.django.utils.validators.validate_weekday_in_lesson_data_available], verbose_name='Start')),
                ('end_datetime', models.DateTimeField(validators=[apps.django.utils.validators.validate_weekday_in_lesson_data_available], verbose_name='Ende')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_data.room', verbose_name='Raum')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ('title', 'start_datetime', 'end_datetime', 'room'),
            },
            bases=(django_common_utils.libraries.handlers.models.HandlerMixin, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Modification',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('information', models.TextField(blank=True, max_length=8191, null=True, verbose_name='Information')),
                ('modification_type', models.PositiveSmallIntegerField(choices=[(0, 'Vertretung'), (1, 'Freistunde'), (2, 'Selbstorganisiertes Lernen'), (4, 'Raum채nderung')], default=0, help_text='Art von Ver채nderung', verbose_name='Typ')),
                ('start_datetime', models.DateTimeField(blank=True, verbose_name='Startzeit')),
                ('end_datetime', models.DateTimeField(blank=True, verbose_name='Endzeit')),
                ('from_scooso', models.BooleanField(default=False, verbose_name='Von Scooso')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.lesson', verbose_name='Stunde')),
                ('new_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_data.room', verbose_name='Raum')),
                ('new_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_data.subject', verbose_name='Fach')),
                ('new_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_data.teacher', verbose_name='Lehrer')),
            ],
            options={
                'verbose_name': 'Ver채nderung',
                'verbose_name_plural': 'Ver채nderungen',
                'ordering': ('lesson__date', 'start_datetime'),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExam',
            fields=[
                ('id', models.CharField(db_index=True, editable=False, help_text='An unique ID for the object', max_length=127, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, help_text='Date and time when this was created', max_length=127, verbose_name='Creation date')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-Adresse')),
                ('targeted_date', models.DateField(help_text='Datum, wann die Klassenarbeit geschrieben wird.', validators=[apps.django.utils.validators.validate_weekday_in_lesson_data_available], verbose_name='Datum')),
                ('information', models.TextField(blank=True, max_length=8191, null=True, verbose_name='Informationen')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lesson.course', verbose_name='Kurs')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='school_data.room', verbose_name='Raum')),
            ],
            options={
                'verbose_name': 'historical Klassenarbeit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, help_text='Date and time when this was created', max_length=127, verbose_name='Creation date')),
                ('targeted_date', models.DateField(help_text='Datum, wann die Klassenarbeit geschrieben wird.', validators=[apps.django.utils.validators.validate_weekday_in_lesson_data_available], verbose_name='Datum')),
                ('information', models.TextField(blank=True, max_length=8191, null=True, verbose_name='Informationen')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.course', verbose_name='Kurs')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school_data.room', verbose_name='Raum')),
            ],
            options={
                'verbose_name': 'Klassenarbeit',
                'verbose_name_plural': 'Klassenarbeiten',
                'ordering': ('targeted_date', 'course', 'room'),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model, django_common_utils.libraries.handlers.models.HandlerMixin),
        ),
        migrations.CreateModel(
            name='UserEventRelation',
            fields=[
                ('id', models.CharField(editable=False, help_text='An unique ID for the object', max_length=127, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('ignore', models.BooleanField(default=False, verbose_name='Ignorieren')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.event', verbose_name='Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Event-Benutzer-Beziehung',
                'verbose_name_plural': 'Event-Benutzer-Beziehungen',
                'ordering': ('event', 'user'),
                'unique_together': {('event', 'user')},
            },
        ),
    ]
